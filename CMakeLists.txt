cmake_minimum_required(VERSION 3.3)
project(xv6_public)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(SOURCE_FILES
    _cat
    _echo
    _forktest
    _grep
    _init
    _kill
    _ln
    _ls
    _mkdir
    _poweroff
    _rm
    _sh
    _stressfs
    _usertests
    _wc
    _zombie
    asm.h
    bio.c
    bio.d
    bio.o
    bootasm.d
    bootasm.o
    bootasm.S
    bootblock
    bootblock.asm
    bootblock.o
    bootblockother.o
    bootmain.c
    bootmain.d
    bootmain.o
    buf.h
    BUGS
    cat.asm
    cat.c
    cat.d
    cat.o
    cat.sym
    console.c
    console.d
    console.o
    cuth
    date.h
    defs.h
    dot-bochsrc
    echo.asm
    echo.c
    echo.d
    echo.o
    echo.sym
    elf.h
    entry.o
    entry.S
    entryother
    entryother.asm
    entryother.d
    entryother.o
    entryother.S
    exec.c
    exec.d
    exec.o
    fcntl.h
    file.c
    file.d
    file.h
    file.o
    forktest.asm
    forktest.c
    forktest.d
    forktest.o
    fs.c
    fs.d
    fs.h
    fs.img
    fs.o
    gdbutil
    grep.asm
    grep.c
    grep.d
    grep.o
    grep.sym
    ide.c
    ide.d
    ide.o
    init.asm
    init.c
    init.d
    init.o
    init.sym
    initcode
    initcode.asm
    initcode.d
    initcode.o
    initcode.out
    initcode.S
    ioapic.c
    ioapic.d
    ioapic.o
    kalloc.c
    kalloc.d
    kalloc.o
    kbd.c
    kbd.d
    kbd.h
    kbd.o
    kernel
    kernel.asm
    kernel.ld
    kernel.sym
    kill.asm
    kill.c
    kill.d
    kill.o
    kill.sym
    lapic.c
    lapic.d
    lapic.o
    LICENSE
    ln.asm
    ln.c
    ln.d
    ln.o
    ln.sym
    log.c
    log.d
    log.o
    ls.asm
    ls.c
    ls.d
    ls.o
    ls.sym
    main.c
    main.d
    main.o
    Makefile
    memide.c
    memlayout.h
    mkdir.asm
    mkdir.c
    mkdir.d
    mkdir.o
    mkdir.sym
    mkfs
    mkfs.c
    mmu.h
    mp.c
    mp.d
    mp.h
    mp.o
    Notes
    param.h
    picirq.c
    picirq.d
    picirq.o
    pipe.c
    pipe.d
    pipe.o
    poweroff.asm
    poweroff.c
    poweroff.d
    poweroff.o
    poweroff.sym
    pr.pl
    printf.c
    printf.d
    printf.o
    printpcs
    proc.c
    proc.d
    proc.h
    proc.o
    README
    rm.asm
    rm.c
    rm.d
    rm.o
    rm.sym
    runoff
    runoff.list
    runoff.spec
    runoff1
    sh.asm
    sh.c
    sh.d
    sh.o
    sh.sym
    show1
    sign.pl
    sleep1.p
    spinlock.c
    spinlock.d
    spinlock.h
    spinlock.o
    spinp
    stat.h
    stressfs.asm
    stressfs.c
    stressfs.d
    stressfs.o
    stressfs.sym
    string.c
    string.d
    string.o
    swtch.o
    swtch.S
    symlink.patch
    syscall.c
    syscall.d
    syscall.h
    syscall.o
    sysfile.c
    sysfile.d
    sysfile.o
    sysproc.c
    sysproc.d
    sysproc.o
    timer.c
    timer.d
    timer.o
    toc.ftr
    toc.hdr
    trap.c
    trap.d
    trap.o
    trapasm.o
    trapasm.S
    traps.h
    TRICKS
    types.h
    uart.c
    uart.d
    uart.o
    ulib.c
    ulib.d
    ulib.o
    umalloc.c
    umalloc.d
    umalloc.o
    user.h
    usertests.asm
    usertests.c
    usertests.d
    usertests.o
    usertests.sym
    usys.o
    usys.S
    vectors.o
    vectors.pl
    vectors.S
    vm.c
    vm.d
    vm.o
    wc.asm
    wc.c
    wc.d
    wc.o
    wc.sym
    x86.h
    xv6.img
    zombie.asm
    zombie.c
    zombie.d
    zombie.o
    zombie.sym)

add_executable(xv6_public ${SOURCE_FILES})